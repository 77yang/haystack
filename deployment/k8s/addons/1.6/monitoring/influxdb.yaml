apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-influxdb
  name: monitoring-influxdb
  namespace: kube-system
spec:
  ports:
   - port: 8086
     targetPort: 8086
  selector:
    k8s-app: monitoring-influxdb
---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: monitoring-influxdb
  name: monitoring-influxdb-graphite
  namespace: kube-system
spec:
  ports:
   - port: 2003
     targetPort: 2003
  selector:
    k8s-app: monitoring-influxdb
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: monitoring-influxdb
  namespace: kube-system
  labels:
    k8s-addon: monitoring-complete.addons.k8s.io
    k8s-app: monitoring-influxdb
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  serviceName: monitoring-influxdb
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        k8s-app: monitoring-influxdb
    spec:
{{- if has (datasource "config") "nodeSelector" }}
      nodeSelector:
{{ (datasource "config").nodeSelector | toYAML | strings.Indent 8 }}
{{- end }}
      containers:
      - name: influxdb
        image: {{ (datasource "config").image }}
{{- if has (datasource "config") "env" }}
        env:
{{ (datasource "config").env | toYAML | strings.Indent 10 }}
{{- end }}
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 500Mi
        ports:
          - containerPort: 8083
{{- if has (datasource "config") "hostAdminPort" }}
            hostPort: {{ (datasource "config").hostAdminPort }}
{{- end }}
          - containerPort: 2003
{{- if has (datasource "config") "hostGraphitePort" }}
            hostPort: {{ (datasource "config").hostGraphitePort }}
{{- end }}
          - containerPort: 8086
{{- if has (datasource "config") "hostHttpPort" }}
            hostPort: {{ (datasource "config").hostHttpPort }}
{{- end }}
        volumeMounts:
        - mountPath: /data
          name: influxdb-persistent-storage
  volumeClaimTemplates:
    - metadata:
        name: influxdb-persistent-storage
        annotations:
          volume.beta.kubernetes.io/storage-class: "{{ (datasource "config").storageClass }}"
      spec:
        storageClassName: "{{ (datasource "config").storageClass }}"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ (datasource "config").storage }}
