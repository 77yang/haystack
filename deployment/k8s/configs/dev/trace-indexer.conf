span.accumulate {
  store {
    min.traces.per.cache = 1000 # this defines the minimum traces in each cache before eviction check is applied. This is also useful for testing the code
    all.max.entries = 20000 # this is the maximum number of spans that can live across all the stores
  }
  window.ms = 10000
  poll.ms = 2000
}

kafka {
  streams {
    application.id = "haystack-trace-indexer"
    bootstrap.servers = "kafkasvc:9092"
    num.stream.threads = 2
    commit.interval.ms = 3000
  }

# producer specific configurations
  producer {
    topic = "span-buffer"
  }

# consumer specific configurations
  consumer {
    topic = "spans"
  }
}


cassandra {
  # multiple endpoints can be provided as comma separated
  endpoints: "cassandra"
  consistency.level = "one"
  ttl.sec = 86400

  keyspace: {
    # auto creates the keyspace and table name in cassandra(if absent)
    # if schema field is empty or not present, then no operation is performed
    auto.create.schema = "CREATE KEYSPACE IF NOT EXISTS haystack WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor' : 1} AND durable_writes = false;\n\nuse haystack;\n\nCREATE TABLE traces (\nid varchar,\nts timestamp,\nspans blob,\nPRIMARY KEY ((id), ts)\n) WITH CLUSTERING ORDER BY (ts ASC);\n\nALTER TABLE traces WITH compaction = { 'class' :  'DateTieredCompactionStrategy'  };"

    name: "haystack"
    table.name: "traces"
  }
}

elasticsearch {
  endpoint = "http://elasticsearch:9200"
  conn.timeout.ms = 10000
  read.timeout.ms = 5000
  consistency.level = "one"

  index {
    # apply the template before starting the client, if json is empty, no operation is performed
    template.json = "{\"template\": \"haystack-traces*\",\"settings\": {\"number_of_shards\": 1},\"mappings\": {\"spans\": {\"_source\": {\"enabled\": false},\"properties\": {\"spans\": {\"type\": \"nested\"}}}}}"

    name.prefix = "haystack-traces"
    type = "spans"
  }
}

reload {
  tables {
    index.fields.config = "indexing-fields"
  }
  config {
    endpoint = "http://elasticsearch:9200"
    database.name = "reload-configs"
  }
  startup.load = true
  interval.ms = 600000 # -1 will imply 'no reload'
}

